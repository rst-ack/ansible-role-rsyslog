---
# tasks file for rsyslog

- name: Import assert.yml
  ansible.builtin.import_tasks: assert.yml
  run_once: yes
  delegate_to: localhost

- name: Uninstall conflicting systemd-logger
  ansible.builtin.package:
    name: systemd-logger
    state: absent

- name: Install rsyslog
  ansible.builtin.package:
    name: "{{ rsyslog_packages }}"
    state: "{{ rsyslog_package_state }}"

- name: Install rsyslog plugins
  ansible.builtin.package:
    name: "rsyslog-{{ item }}"
    state: "{{ rsyslog_package_state }}"
  loop: "{{ rsyslog_plugins }}"

- name: Deploy base rsyslog config
  ansible.builtin.template:
    src: "rsyslog.conf.j2"
    dest: "{{ rsyslog_dest_conf_file }}"
    mode: "0640"
    owner: "{{ rsyslog_fileowner }}"
    group: "{{ rsyslog_filegroup }}"
    backup: yes
  notify:
    - Restart rsyslog

- name: Deploy file output configuration
  ansible.builtin.template:
    src: "rsyslog.d/output_file.conf.j2"
    dest: "/etc/rsyslog.d/output_file.conf"
    mode: "0640"
    owner: "{{ rsyslog_fileowner }}"
    group: "{{ rsyslog_filegroup }}"
    backup: yes
  notify:
    - Restart rsyslog

- name: Seed config directory
  ansible.builtin.file:
    name: /etc/rsyslog.d/
    state: directory
    mode: "0755"
    owner: "{{ rsyslog_dirowner }}"
    group: "{{ rsyslog_dirgroup }}"

- name: Deploy rsyslog forwarding configuration
  ansible.builtin.template:
    src: "rsyslog.d/forward_syslog_{{ item.key }}.conf.j2"
    dest: "/etc/rsyslog.d/forward_syslog_{{ item.key }}.conf"
    mode: "0644"
    owner: "{{ rsyslog_dirowner }}"
    group: "{{ rsyslog_dirgroup }}"
    backup: yes
  loop: "{{ rsyslog_remote_protocols|dict2items }}"
  when: rsyslog_remote_server is defined
  notify:
    - Restart rsyslog

- name: Deploy rsyslog receive rule(s)
  ansible.builtin.template:
    src: "rsyslog.d/input_syslog_{{ item.key }}.conf.j2"
    dest: "/etc/rsyslog.d/input_syslog_{{ item.key }}.conf"
    mode: "0644"
    owner: "{{ rsyslog_dirowner }}"
    group: "{{ rsyslog_dirgroup }}"
    backup: yes
  loop: "{{ rsyslog_remote_protocols|dict2items }}"
  when: rsyslog_receiver
  notify:
    - Restart rsyslog

- name: Deploy custom configuration files
  ansible.builtin.copy:
    content: "{{ item.value.content | default('') }}"
    dest: "/etc/rsyslog.d/{{ item.key }}.conf"
    validate: "{{ 'rsyslogd -N1 -f %s' if item.value.validate | default(false) else 'true %s' }}"
    owner: "{{ rsyslog_dirowner }}"
    group: "{{ rsyslog_dirgroup }}"
    mode: "0640"
    backup: yes
  loop: "{{ rsyslog_custom_configs|dict2items }}"
  when:
    - item.value.state | default('present') == 'present'
  notify:
    - Restart rsyslog

- name: Start and enable rsyslog
  ansible.builtin.service:
    name: "{{ rsyslog_service }}"
    state: started
    enabled: yes
